// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "ShootCommand.h"
#include "time.h"
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

ShootCommand::ShootCommand(): Command() {
        // Use requires() here to declare subsystem dependencies
    // eg. requires(chassis);
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::launcher.get());
	isFinished = false;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
}

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

// Called just before this Command runs the first time
void ShootCommand::Initialize() {
	isFinished= false;
}

// Called repeatedly when this Command is scheduled to run
void ShootCommand::Execute() {

	Robot::launcher->MoveKickerUp(.75);
	if(Robot::launcher->launcherKickerTop->Get()==false){
		isFinished = true;
	}
	else{
		isFinished = false;
	}
}

// Make this return true when this Command no longer needs to run execute()
bool ShootCommand::IsFinished() {
	return isFinished;
}

// Called once after isFinished returns true
void ShootCommand::End() {
Robot::launcher->Reset();
Robot::launcher->StopWheels();
}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void ShootCommand::Interrupted() {

}
